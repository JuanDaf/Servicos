// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServicesContex;

#nullable disable

namespace ServicesContex.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230718183652_firstm")]
    partial class firstm
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.DetallesEntity", b =>
                {
                    b.Property<Guid>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PersonaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonsPersonaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("ServicesServicioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServicioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DetalleId");

                    b.HasIndex("PersonsPersonaId");

                    b.HasIndex("ServicesServicioId");

                    b.ToTable("Detalles");
                });

            modelBuilder.Entity("Entities.PersonsEntity", b =>
                {
                    b.Property<string>("PersonaId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NivelEstrato")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PersonaId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonaId = "123456789",
                            Apellidos = "Forero",
                            Direccion = "Bogota",
                            Email = "Iotled@yopmail.com",
                            NivelEstrato = 0,
                            Nombres = "Juan David"
                        },
                        new
                        {
                            PersonaId = "765390123",
                            Apellidos = "Ramirez",
                            Direccion = "Bogota",
                            Email = "Iotled@yopmail.com",
                            NivelEstrato = 0,
                            Nombres = "Juan Carlos"
                        });
                });

            modelBuilder.Entity("Entities.ServicesEntity", b =>
                {
                    b.Property<Guid>("ServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescripcionServicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NommbreServicio")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("ServicioId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            ServicioId = new Guid("0e3d96c2-0aac-4176-b551-389845fe5e37"),
                            DescripcionServicio = "Sin Descripcion",
                            FechaCreacion = new DateTime(2023, 7, 18, 13, 36, 51, 860, DateTimeKind.Local).AddTicks(6632),
                            NommbreServicio = "Telefonia ETB"
                        },
                        new
                        {
                            ServicioId = new Guid("7e51c224-a766-4d5a-a84a-dd850fdd21f2"),
                            DescripcionServicio = "Sin Descripcion",
                            FechaCreacion = new DateTime(2023, 7, 18, 13, 36, 51, 860, DateTimeKind.Local).AddTicks(6646),
                            NommbreServicio = "Telefonia Claro"
                        });
                });

            modelBuilder.Entity("Entities.DetallesEntity", b =>
                {
                    b.HasOne("Entities.PersonsEntity", "Persons")
                        .WithMany("Detalles")
                        .HasForeignKey("PersonsPersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.ServicesEntity", "Services")
                        .WithMany("Detalles")
                        .HasForeignKey("ServicesServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persons");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("Entities.PersonsEntity", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("Entities.ServicesEntity", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
